{"version":3,"sources":["imgs/proflephotos/portfolioPhoto2.jpg","docs/NeoOwensResume.pdf","pages/home.js","pages/contact.js","docs/resume.js","pages/experience.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","id","className","src","portfolioPhoto","React","Component","Contact","MyResumePDF","props","useState","numPages","setNumPages","pageNumber","pdf","file","options","workerSrc","onLoadSuccess","onLoadError","error","console","Array","from","el","index","key","pdfjs","GlobalWorkerOptions","version","Experience","ResumeFile","App","to","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,kUCIrCC,E,uKAEE,OACI,6BACI,4BAAQC,GAAG,cACP,yBAAKC,UAAU,UACX,yBAAKC,IAAMC,IAAgBF,UAAU,iBACrC,wBAAID,GAAG,WAAP,aACA,wBAAIA,GAAG,gBAAP,wBAGR,yBAAKC,UAAU,eACX,yBAAKA,UAAU,YAAYD,GAAG,oBAC1B,wBAAIA,GAAG,iBAAP,YACA,yBAAKC,UAAU,eAAeD,GAAG,iBAAjC,uVAMA,yBAAKC,UAAU,iBAAiBD,GAAG,mBAC/B,yBAAKC,UAAU,yCACf,yBAAKA,UAAU,kDACX,wCACA,4BACI,qCACA,uCACA,0CACA,sCAGR,yBAAKA,UAAU,kDACX,uCACA,4BACI,0CACA,kCACA,oCACA,2CAGR,yBAAKA,UAAU,kDACX,sCACA,4BACI,wCACA,sCACA,uD,GA7CjBG,IAAMC,WCDnBC,E,uKAEE,OACI,6BACI,6C,GAJMF,IAAMC,W,gBCCb,SAASE,EAAYC,GAAO,IAAD,EAENC,mBAAS,MAFH,mBAE/BC,EAF+B,KAErBC,EAFqB,OAGFF,mBAAS,GAHP,mBAG/BG,EAH+B,cAS7BC,EAAOL,EAAPK,IAEP,OACI,6BACE,kBAAC,IAAD,CAAUC,KAAMD,EAAKE,QAAS,CAAEC,UAAW,kBACvCC,cATZ,YAA8C,IAAbP,EAAY,EAAZA,SAC7BC,EAAYD,IAQkCQ,YAAc,SAACC,GAAD,OACpDC,QAAQD,MAAMA,KACbE,MAAMC,KAAK,IAAID,MAAMX,IAAW,SAACa,EAAIC,GAAL,OACjC,kBAAC,IAAD,CAAMC,IAAG,eAAUD,EAAQ,GAAKZ,WAAYY,EAAQ,QAGtD,mCAASZ,EAAT,OAAyBF,IAtBvCgB,IAAMC,oBAAoBX,UAA1B,kDAAiFU,IAAME,QAAvF,kB,qBCGMC,E,uKAEE,OACI,yBAAK5B,UAAU,aACX,yBAAKA,UAAU,8BACX,kBAACM,EAAD,CAAaM,IAAKiB,Y,GALb1B,IAAMC,WC+BhB0B,G,6KA1BX,OAEE,6BACE,kBAAC,IAAD,KACE,6BACE,yBAAK/B,GAAG,WACN,yBAAKC,UAAU,QAAO,4CACpB,wBAAIA,UAAU,UAAUD,GAAG,YACzB,4BAAI,kBAAC,IAAD,CAAMC,UAAU,WAAW+B,GAAG,SAA9B,SACJ,4BAAI,kBAAC,IAAD,CAAM/B,UAAU,WAAW+B,GAAG,eAA9B,eACJ,4BAAI,kBAAC,IAAD,CAAM/B,UAAU,WAAW+B,GAAG,YAA9B,cAIV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAa5B,IAClC,kBAAC,IAAD,CAAO2B,KAAK,cAAcC,UAAaL,IACvC,kBAAC,IAAD,CAAOI,KAAK,IAAIC,UAAWnC,Y,GApBvBK,IAAMC,YCKJ8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACT,kBAAC,IAAD,KACI,kBAAC,EAAD,OACcC,SAASC,eAAe,SDuHpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b8443447.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolioPhoto2.008a921e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NeoOwensResume.e1aeae45.pdf\";","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport portfolioPhoto from '../imgs/proflephotos/portfolioPhoto2.jpg';\r\n\r\nclass Home extends React.Component {\r\n    render() { \r\n        return(\r\n            <div>\r\n                <header id=\"homeHeader\">\r\n                    <div className=\"center\">\r\n                        <img src ={portfolioPhoto} className=\"profilePhoto\" />\r\n                        <h2 id=\"txtName\">Neo Owens</h2>\r\n                        <h3 id=\"txtWorkTitle\">Software Developer</h3>\r\n                    </div>\r\n                </header>\r\n                <div className=\"mainContent\">\r\n                    <div className=\"container\" id=\"aboutMeContainer\">\r\n                        <h2 id=\"aboutMeHeader\">About Me</h2>\r\n                        <div className=\"col sm-col-9\" id=\"aboutMeDetail\">\r\n                        Experienced developer with 5+ years experience. Specializing in .NET web and console application development using ASP.NET, C#, and SQL Server. \r\n                        Searching for an opportunity to learn and apply new and emerging technologies. \r\n                        Experience as a developer has enhanced my ability to design, develop, test, and deploy console and web applications. \r\n                        </div>\r\n                        {/* <div className=\"col sm-col-3\"></div> */}\r\n                        <div className=\"container px-4\" id=\"skillscontainer\">\r\n                            <div className=\"row g-2 d-flex justify-content-center\">\r\n                            <div className=\"col skillsets shadow p-3 mb-5 bg-white rounded\">\r\n                                <h6>FrontEnd</h6>\r\n                                <ul>\r\n                                    <li>React</li>\r\n                                    <li>Node.js</li>\r\n                                    <li>Javascript</li>\r\n                                    <li>HTML</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col skillsets shadow p-3 mb-5 bg-white rounded\">\r\n                                <h6>BackEnd</h6>\r\n                                <ul>\r\n                                    <li>SQL Server</li>\r\n                                    <li>C#</li>\r\n                                    <li>.NET</li>\r\n                                    <li>.NET Core</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col skillsets shadow p-3 mb-5 bg-white rounded\">\r\n                                <h6>Others</h6>\r\n                                <ul>\r\n                                    <li>Power Bi</li>\r\n                                    <li>Github</li>\r\n                                    <li>Azure DevOps</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { Home }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Contact extends React.Component {\r\n    render() { \r\n        return(\r\n            <div>\r\n                <h1>About...</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { Contact }","import React, {useState} from 'react';\r\nimport { Page, Document, pdfjs } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport default function MyResumePDF(props){\r\n\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n    }\r\n      \r\n      const {pdf} = props;\r\n      \r\n      return (\r\n          <div>\r\n            <Document file={pdf} options={{ workerSrc: \"/pdf.worker.js\" }}\r\n                onLoadSuccess={onDocumentLoadSuccess} onLoadError={ (error) =>\r\n                console.error(error)}>\r\n                {Array.from(new Array(numPages), (el, index) => (\r\n                <Page key={`page_${index + 1}`} pageNumber={index + 1} />\r\n                    ))}\r\n            </Document>\r\n              <p>Page {pageNumber} of {numPages}</p>\r\n          </div>\r\n      )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MyResumePDF from '../docs/resume'\r\nimport ResumeFile from '../docs/NeoOwensResume.pdf';\r\n\r\nclass Experience extends React.Component {\r\n    render() { \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <MyResumePDF pdf={ResumeFile} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport { Experience }","import React from 'react';\r\n// import { Redirect, history } from 'react-router';\r\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\r\nimport { Home, Experience, Contact } from './pages/index';\r\n// import { createBrowserHistory } from \"history\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n\r\n    return(\r\n\r\n      <div>\r\n        <Router>\r\n          <div>\r\n            <nav id=\"sitenav\">\r\n              <div className=\"name\"><span>Neo Owens</span></div>\r\n                <ul className=\"navlist\" id=\"pNavList\">\r\n                  <li><Link className=\"nav-link\" to=\"/home\">Home</Link></li>\r\n                  <li><Link className=\"nav-link\" to=\"/experience\">Experience</Link></li>\r\n                  <li><Link className=\"nav-link\" to=\"/contact\">Contact</Link></li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <Switch>\r\n              <Route path=\"/about\" component = {Contact} />\r\n              <Route path=\"/experience\" component = {Experience} />\r\n              <Route path=\"/\" component={Home}></Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}