{"version":3,"sources":["imgs/proflephotos/portfolioPhoto2.jpg","routes/home.js","routes/about.js","routes/projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","id","className","src","portfolioPhoto","React","Component","About","Projects","history","createBrowserHistory","App","href","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,6C,8NCKrCC,E,uKAEE,OACI,yBAAKC,GAAG,WACJ,4BAAQA,GAAG,cACP,yBAAKC,UAAU,UACX,yBAAKC,IAAMC,IAAgBF,UAAU,iBACrC,wBAAID,GAAG,WAAP,aACA,wBAAIA,GAAG,gBAAP,wBAGR,yBAAKC,UAAU,eACX,yBAAKA,UAAU,YAAYD,GAAG,oBAC1B,wBAAIA,GAAG,iBAAP,YACA,yBAAKC,UAAU,eAAeD,GAAG,iBAAjC,+NAMA,yBAAKC,UAAU,wB,GApBpBG,IAAMC,WCFnBC,E,uKAEE,OACI,6BACI,6C,GAJIF,IAAMC,WCApBE,E,uKAEE,OACI,6BACI,gD,GAJOH,IAAMC,W,OCIvBG,G,MAAUC,eA2BDC,E,uKAvBX,OAEA,yBAAKT,UAAU,OACb,yBAAKD,GAAG,eACN,yBAAKC,UAAU,QAAO,4CACpB,wBAAIA,UAAU,UAAUD,GAAG,YACzB,4BAAI,uBAAGC,UAAU,kBAAkBU,KAAK,SAApC,SACJ,4BAAI,uBAAGV,UAAU,WAAWU,KAAK,aAA7B,aACJ,4BAAI,uBAAGV,UAAU,WAAWU,KAAK,UAA7B,eAGV,kBAAC,IAAD,CAAQH,QAAWA,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAaf,IACnC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,SAASC,UAAaR,IACxC,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,YAAYC,UAAaP,W,GAjBnCF,aCGEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e0467802.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolioPhoto2.008a921e.jpg\";","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import { Router, Route, Link, browserHistory, Industry } from 'react-router';\r\nimport portfolioPhoto from '../imgs/proflephotos/portfolioPhoto2.jpg';\r\n\r\nclass Home extends React.Component {\r\n    render() { \r\n        return(\r\n            <div id=\"homeDiv\">\r\n                <header id=\"homeHeader\">\r\n                    <div className=\"center\">\r\n                        <img src ={portfolioPhoto} className=\"profilePhoto\" />\r\n                        <h2 id=\"txtName\">Neo Owens</h2>\r\n                        <h3 id=\"txtWorkTitle\">Software Developer</h3>\r\n                    </div>\r\n                </header>\r\n                <div className=\"mainContent\">\r\n                    <div className=\"container\" id=\"aboutMeContainer\">\r\n                        <h2 id=\"aboutMeHeader\">About Me</h2>\r\n                        <div className=\"col sm-col-9\" id=\"aboutMeDetail\">\r\n                            Software Developer with natural curiosity of new technology.\r\n                            Three years experience creating web and console applications \r\n                            for internal clients that display and manipulate date in a database \r\n                            or a third party application.\r\n                        </div>\r\n                        <div className=\"col sm-col-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { Home }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass About extends React.Component {\r\n    render() { \r\n        return(\r\n            <div>\r\n                <h1>About...</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { About }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Projects extends React.Component {\r\n    render() { \r\n        return(\r\n            <div>\r\n                <h1>Projects...</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { Projects }","import React, { Component, useReducer } from 'react';\r\n// import { Redirect, history } from 'react-router';\r\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { Home, About, Projects } from './routes/index';\r\nimport { createBrowserHistory } from \"history\";\r\nimport './App.css';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return(\r\n\r\n    <div className=\"App\">\r\n      <nav id=\"homebodynav\">\r\n        <div className=\"name\"><span>Neo Owens</span></div>\r\n          <ul className=\"navlist\" id=\"pNavList\">\r\n            <li><a className=\"nav-link active\" href=\"/home\">Home</a></li>\r\n            <li><a className=\"nav-link\" href=\"/projects\">Projects</a></li>\r\n            <li><a className=\"nav-link\" href=\"/about\">About Me</a></li>\r\n          </ul>\r\n      </nav>\r\n      <Router history = {history}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component = {Home} />\r\n          <Route exact path=\"/about\" component = {About} />\r\n          <Route exact path=\"/projects\" component = {Projects} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}